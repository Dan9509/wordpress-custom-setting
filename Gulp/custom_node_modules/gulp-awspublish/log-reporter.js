const
  pad = require('../../node_modules/pad-component'),
  colors = require('../../node_modules/ansi-colors'),
  fancyLog = require('../../node_modules/fancy-log'),
  through = require('../../node_modules/through2'),
  moment = require('moment'),
  SlackMessage = require('../../GulpFunctions/Slack').SlackMessage;

/**
 * create a log reporter
 * @param {Object} options reporter options
 *
 * available options are:
 *   - states: list of state to log (default to all)
 */

module.exports = function(options) {
  let slackPush = true;
  if (!options)
    options = {};
  else if(options === "slackNoPush")
    slackPush = false;

  let stream = through.obj(function(file, enc, cb) {
    let state;
    if (!file.s3) return cb(null, file);
    if (!file.s3.state) return cb(null, file);
    if (options.states && options.states.indexOf(file.s3.state) === -1)
      return cb(null, file);

    state = '[' + file.s3.state + ']';
    state = pad.right(state, 8);

    switch (file.s3.state) {
      case 'create':
        state = colors.green(state);
        break;
      case 'delete':
        state = colors.red(state);
        break;
      default:
        state = colors.cyan(state);
        break;
    }

    fancyLog(state, file.s3.path);
    // slack message push
    // const slackMessagePromise = (stateMessage) => (
    //   new Promise((resolve, reject) => {
    //     if(stateMessage !== undefined) {
    //       console.log(stateMessage);
    //       resolve(SlackMessage('S3', stateMessage));}
    //     else reject(console.log('reject!'))
    //   })
    // );
    // slackMessagePromise(stateMessage);

    let stateMessage = `\[${moment().format('HH:mm:ss')}\] \`${file.s3.state}\`  \nðŸ”— ${process.env.AWS_S3_URL + file.s3.path}`;
    if(slackPush)
      SlackMessage('S3', stateMessage);

    cb(null, file);
  });

  // force flowing mode
  // @see http://nodejs.org/docs/latest/api/stream.html#stream_event_end
  // @see https://github.com/pgherveou/gulp-awspublish/issues/13
  stream.resume();
  return stream;
};
